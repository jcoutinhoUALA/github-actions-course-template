# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # Cada "-" sería un step...
      - uses: actions/checkout@v2
        name: actions checkout exectution
      
      - name: run npm install and build
        run: npm install
        
      - run: npm build
      
      # Esta sería la forma "correcta" de definir un step que hace varias cosas en UN run multilinea
      - name: (2) run npm install and build
        run: |
          npm install
          npm build

      # Sube archivos generados en este job (de su VM)
      - uses: actions/upload-artifact@master
        with:
            name: webpack artifacts
            path: public/
      
    
  tests:
    runs-on: ubuntu-latest
    needs: [build]

    strategy:
      matrix:
        os: [windows-2016, ubuntu-20.04]
        node-version: [10.x, 12.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    # Descarga archivos generados en este job (de su VM)
    - uses: actions/download-artifact@master
      with:
        name: webpack artifacts
        path: public

    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # npm ci es equivalente a "npm install" solo que no actualiza el package-lock y necesita si o si ese file o explota
    - run: npm install
      name: npm install
      
      # Nos faltaría el "npm build", esto es para demostrar que los jobs se ejecutan en VM separadas
      
    - run: npm test
      name: npm test name
